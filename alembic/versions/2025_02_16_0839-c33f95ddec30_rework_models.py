"""Rework models.

Revision ID: c33f95ddec30
Revises: f0496c7118a9
Create Date: 2025-02-16 08:39:39.725876

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "c33f95ddec30"
down_revision: Union[str, None] = "f0496c7118a9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('DROP TYPE roleenum CASCADE')

    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("first_name", sa.String(length=50), nullable=False),
        sa.Column("second_name", sa.String(length=50), server_default="", nullable=True),
        sa.Column("last_name", sa.String(length=50), nullable=False),
        sa.Column(
            "role", sa.Enum("STUDENT", "TEACHER", "SUPERUSER", name="roleenum"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("email", name=op.f("uq_users_email")),
        sa.UniqueConstraint("password", name=op.f("uq_users_password")),
        sa.UniqueConstraint("username", name=op.f("uq_users_username")),
    )
    op.drop_constraint("uq_profiles_student_id", "profiles", type_="unique")
    op.drop_constraint("uq_profiles_student_id_teacher_id", "profiles", type_="unique")
    op.drop_constraint("uq_profiles_teacher_id", "profiles", type_="unique")
    op.drop_constraint("fk_profiles_teacher_id_teachers", "profiles", type_="foreignkey")
    op.drop_constraint("fk_profiles_student_id_students", "profiles", type_="foreignkey")
    op.drop_column("profiles", "teacher_id")
    op.drop_column("profiles", "student_id")
    op.add_column("students", sa.Column("class_id", sa.Integer(), nullable=False))
    op.drop_constraint("uq_students_email", "students", type_="unique")
    op.drop_constraint("uq_students_password", "students", type_="unique")
    op.drop_constraint("uq_students_username", "students", type_="unique")
    op.drop_constraint("fk_student_class_num", "students", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk_students_class_id_classes"),
        "students",
        "classes",
        ["class_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("fk_students_id_users"), "students", "users", ["id"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("students", "email")
    op.drop_column("students", "second_name")
    op.drop_column("students", "first_name")
    op.drop_column("students", "password")
    op.drop_column("students", "class_num")
    op.drop_column("students", "last_name")
    op.drop_column("students", "username")
    op.drop_constraint("uq_teachers_email", "teachers", type_="unique")
    op.drop_constraint("uq_teachers_password", "teachers", type_="unique")
    op.drop_constraint("uq_teachers_username", "teachers", type_="unique")
    op.create_foreign_key(
        op.f("fk_teachers_id_users"), "teachers", "users", ["id"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("teachers", "email")
    op.drop_column("teachers", "second_name")
    op.drop_column("teachers", "first_name")
    op.drop_column("teachers", "password")
    op.drop_column("teachers", "last_name")
    op.drop_column("teachers", "username")
    # ### end Alembic commands ###


def downgrade() -> None:
    op.execute('CREATE TYPE roleenum AS ENUM (\'student\', \'teacher\', \'superuser\')')

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "teachers", sa.Column("username", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "teachers",
        sa.Column("last_name", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    )
    op.add_column(
        "teachers", sa.Column("password", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "teachers",
        sa.Column("first_name", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    )
    op.add_column(
        "teachers",
        sa.Column(
            "second_name",
            sa.VARCHAR(length=50),
            server_default=sa.text("''::character varying"),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "teachers",
        sa.Column(
            "role",
            postgresql.ENUM("student", "teacher", "superuser", name="roleenum"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column("teachers", sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(op.f("fk_teachers_id_users"), "teachers", type_="foreignkey")
    op.create_unique_constraint("uq_teachers_username", "teachers", ["username"])
    op.create_unique_constraint("uq_teachers_password", "teachers", ["password"])
    op.create_unique_constraint("uq_teachers_email", "teachers", ["email"])
    op.add_column(
        "students", sa.Column("username", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "students", sa.Column("last_name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "students", sa.Column("class_num", sa.INTEGER(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "students", sa.Column("password", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "students", sa.Column("first_name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "students", sa.Column("second_name", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "students",
        sa.Column(
            "role",
            postgresql.ENUM("student", "teacher", "superuser", name="roleenum"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column("students", sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(op.f("fk_students_id_users"), "students", type_="foreignkey")
    op.drop_constraint(op.f("fk_students_class_id_classes"), "students", type_="foreignkey")
    op.create_foreign_key(
        "fk_student_class_num",
        "students",
        "classes",
        ["class_num"],
        ["class_num"],
        ondelete="CASCADE",
    )
    op.create_unique_constraint("uq_students_username", "students", ["username"])
    op.create_unique_constraint("uq_students_password", "students", ["password"])
    op.create_unique_constraint("uq_students_email", "students", ["email"])
    op.drop_column("students", "class_id")
    op.add_column(
        "profiles", sa.Column("student_id", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "profiles", sa.Column("teacher_id", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_foreign_key(
        "fk_profiles_student_id_students",
        "profiles",
        "students",
        ["student_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "fk_profiles_teacher_id_teachers",
        "profiles",
        "teachers",
        ["teacher_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_unique_constraint("uq_profiles_teacher_id", "profiles", ["teacher_id"])
    op.create_unique_constraint(
        "uq_profiles_student_id_teacher_id", "profiles", ["student_id", "teacher_id"]
    )
    op.create_unique_constraint("uq_profiles_student_id", "profiles", ["student_id"])
    op.drop_table("users")
    # ### end Alembic commands ###
