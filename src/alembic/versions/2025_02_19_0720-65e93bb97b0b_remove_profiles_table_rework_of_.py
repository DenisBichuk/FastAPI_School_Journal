"""Remove profiles table, rework of Students and Teachers models.

Revision ID: 65e93bb97b0b
Revises: e03d56a3c543
Create Date: 2025-02-19 07:20:36.747031

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "65e93bb97b0b"
down_revision: Union[str, None] = "e03d56a3c543"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("profiles")
    op.drop_constraint("uq_students_email", "students", type_="unique")
    op.drop_constraint("uq_students_password", "students", type_="unique")
    op.drop_constraint("uq_students_username", "students", type_="unique")
    op.drop_column("students", "password")
    op.drop_column("students", "second_name")
    op.drop_column("students", "email")
    op.drop_column("students", "username")
    op.drop_column("students", "last_name")
    op.drop_column("students", "first_name")
    op.drop_constraint("uq_teachers_email", "teachers", type_="unique")
    op.drop_constraint("uq_teachers_password", "teachers", type_="unique")
    op.drop_constraint("uq_teachers_username", "teachers", type_="unique")
    op.drop_column("teachers", "password")
    op.drop_column("teachers", "second_name")
    op.drop_column("teachers", "email")
    op.drop_column("teachers", "username")
    op.drop_column("teachers", "last_name")
    op.drop_column("teachers", "first_name")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "teachers",
        sa.Column("first_name", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    )
    op.add_column(
        "teachers",
        sa.Column("last_name", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    )
    op.add_column(
        "teachers", sa.Column("username", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column("teachers", sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column(
        "teachers",
        sa.Column(
            "second_name",
            sa.VARCHAR(length=50),
            server_default=sa.text("''::character varying"),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "teachers", sa.Column("password", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.create_unique_constraint("uq_teachers_username", "teachers", ["username"])
    op.create_unique_constraint("uq_teachers_password", "teachers", ["password"])
    op.create_unique_constraint("uq_teachers_email", "teachers", ["email"])
    op.add_column(
        "students", sa.Column("first_name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "students", sa.Column("last_name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "students", sa.Column("username", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column("students", sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column(
        "students", sa.Column("second_name", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "students", sa.Column("password", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.create_unique_constraint("uq_students_username", "students", ["username"])
    op.create_unique_constraint("uq_students_password", "students", ["password"])
    op.create_unique_constraint("uq_students_email", "students", ["email"])
    op.create_table(
        "profiles",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("student_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("teacher_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["students.id"],
            name="fk_profiles_student_id_students",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["teacher_id"],
            ["teachers.id"],
            name="fk_profiles_teacher_id_teachers",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="pk_profiles"),
        sa.UniqueConstraint("student_id", "teacher_id", name="uq_profiles_student_id_teacher_id"),
        sa.UniqueConstraint("student_id", name="uq_profiles_student_id"),
        sa.UniqueConstraint("teacher_id", name="uq_profiles_teacher_id"),
    )
    # ### end Alembic commands ###
