"""Add marks and profiles tables.

Revision ID: 17fbb1fc6b14
Revises: 6252e931d640
Create Date: 2025-02-11 16:24:25.356462

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "17fbb1fc6b14"
down_revision: Union[str, None] = "6252e931d640"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "marks",
        sa.Column("maths", sa.Integer(), nullable=False),
        sa.Column("english", sa.Integer(), nullable=False),
        sa.Column("history", sa.Integer(), nullable=False),
        sa.Column("physics", sa.Integer(), nullable=False),
        sa.Column("geography", sa.Integer(), nullable=False),
        sa.Column("literature", sa.Integer(), nullable=False),
        sa.Column("student_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["students.id"],
            name=op.f("fk_marks_student_id_students"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_marks")),
        sa.UniqueConstraint("student_id", name=op.f("uq_marks_student_id")),
    )
    op.create_table(
        "profiles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("student_id", sa.Integer(), nullable=True),
        sa.Column("teacher_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["students.id"],
            name=op.f("fk_profiles_student_id_students"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["teacher_id"],
            ["teachers.id"],
            name=op.f("fk_profiles_teacher_id_teachers"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_profiles")),
        sa.UniqueConstraint(
            "student_id", "teacher_id", name=op.f("uq_profiles_student_id_teacher_id")
        ),
        sa.UniqueConstraint("student_id", name=op.f("uq_profiles_student_id")),
        sa.UniqueConstraint("teacher_id", name=op.f("uq_profiles_teacher_id")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("profiles")
    op.drop_table("marks")
    # ### end Alembic commands ###
